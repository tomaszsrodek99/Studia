@model ST1.Context.Match

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Title = "Edit match";
    List<SelectListItem> listItems = new List<SelectListItem>();
    List<SelectListItem> listItems2 = new List<SelectListItem>();
    listItems2.Add(new SelectListItem
    {
        Text = "No",
        Value = "N"
    });
    listItems2.Add(new SelectListItem
    {
        Text = "Yes",
        Value = "Y"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Group match",
        Value = "G"
    });
    listItems.Add(new SelectListItem
    {
        Text = "1/8 final",
        Value = "R"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Quarter final",
        Value = "Q"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Semi final",
        Value = "S"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Final",
        Value = "F"
    });
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    
    <div class="col-md-offset-3 col-md-6" style="border: 2px solid black; background-color: darkgray;">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h2 style=" text-align: center">Edit match</h2>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.MatchID)

                <div class="form-group">
                    @Html.LabelFor(model => model.MatchDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.MatchDate, new { @type = "date", @class = "form-control datepicker" })
                        @Html.ValidationMessageFor(model => model.MatchDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HomeScore, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HomeScore, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HomeScore, "", new { @class = "text-danger" })
                    </div>
                </div>              

                <div class="form-group">
                    @Html.LabelFor(model => model.VisitorScore, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VisitorScore, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VisitorScore, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PlayStage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.PlayStage, listItems, "-- Select stage --")
                        @Html.ValidationMessageFor(model => model.PlayStage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PenaltyScore, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.PenaltyScore, listItems2, "-- Select result --")
                        @Html.ValidationMessageFor(model => model.PenaltyScore, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.HomeScoreP, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HomeScoreP, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.HomeScoreP, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VisitorScoreP, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VisitorScoreP, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VisitorScoreP, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</body>
</html>
